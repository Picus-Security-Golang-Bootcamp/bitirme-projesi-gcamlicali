swagger: "2.0"
info:
  description: "This is a sample e-trade backend server.  "
  version: "1.0.0"
  title: "Swagger Shopping Cart"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "gcamlicali@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api/v1/trade-cart-api"


schemes:
  - "https"
  - "http"
paths:
  /user/signup:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
  /user/singin:
    post:
      tags:
        - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Default Customer log in"
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  /user/singout:
    post:
      tags:
        - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters: [ ]
      responses:
        default:
          description: "successful operation"


definitions:
  Cart:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
  Cart_Item:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      price:
        type: "integer"
        format: "int32"
      cart_id:
        type: "integer"
        format: "int64"
      product_id:
        type: "integer"
        format: "int64"

  Category:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      cart_id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      total_price:
        type: "integer"
        format: "int64"
  Product:
    type: "object"
    required:
      - "category_name"
      - "name"
      - "sku"
    properties:
      id:
        type: "integer"
        format: "int64"
      category_name:
        type: "string"
      name:
        type: "string"
      sku:
        type: "string"
      description:
        type: "string"
  User:
    type: "object"
    required:
      - "firstName"
      - "lastName"
      - "email"
      - "password"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      isAdmin:
        type: "boolean"

  Login:
    type: "object"
    required:
      - email
      - password
    properties:
      email:
        type: "string"
      password:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
      details:
        description: a (key, value) map.
        type: object
